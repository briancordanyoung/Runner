# --------------------------------------------------------------------------------
# This workflow was automatically generated by Action Status 2.0.6 (494).
# (see https://actionstatus.elegantchaos.com for more details)
# --------------------------------------------------------------------------------

name: Tests

on: [push, pull_request]

jobs:

    macOS-swift-50:
        name: macOS (Swift 5.0)
        runs-on: macos-10.15
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Make Logs Directory
          run: mkdir logs
        - name: Xcode Version
          run: |
            ls -d /Applications/Xcode*
            sudo xcode-select -s /Applications/Xcode_11.2.1.app
            xcodebuild -version
            swift --version
        - name: Swift Version
          run: swift --version
        - name: Test (Release)
          run: swift test --configuration release -Xswiftc -enable-testing 
        - name: Upload Logs
          uses: actions/upload-artifact@v1
          if: always()
          with:
            name: logs
            path: logs
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'macOS (Swift 5.0)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    macOS-swift-56:
        name: macOS (Swift 5.6)
        env:
            TOOLCHAINS: swift
        runs-on: macos-11
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Make Logs Directory
          run: mkdir logs
        - name: Install Toolchain
          run: |
            wget --quiet https://download.swift.org/swift-5.6.1-release/xcode/swift-5.6.1-RELEASE/swift-5.6.1-RELEASE-osx.pkg
            sudo installer -pkg swift-5.6.1-RELEASE-osx.pkg -target /
            ln -s "/Library/Developer/Toolchains/swift-5.6.1-RELEASE.xctoolchain/usr/bin" swift-latest
            ls -d /Applications/Xcode*
            sudo xcode-select -s /Applications/Xcode_13.2.1.app
            swift --version
        - name: Xcode Version
          run: |
            xcodebuild -version
            xcrun swift --version
        - name: Swift Version
          run: swift --version
        - name: Test (Release)
          run: export PATH="swift-latest:$PATH"; swift test --configuration release -Xswiftc -enable-testing --enable-test-discovery
        - name: Upload Logs
          uses: actions/upload-artifact@v1
          if: always()
          with:
            name: logs
            path: logs
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'macOS (Swift 5.6)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    linux-swift-50:
        name: Linux (Swift 5.0)
        runs-on: ubuntu-18.04
        container: swift:5.0
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Make Logs Directory
          run: mkdir logs
        - name: Swift Version
          run: swift --version
        - name: Test (Release)
          run: swift test --configuration release -Xswiftc -enable-testing 
        - name: Upload Logs
          uses: actions/upload-artifact@v1
          if: always()
          with:
            name: logs
            path: logs
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'Linux (Swift 5.0)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    linux-swift-56:
        name: Linux (Swift 5.6)
        runs-on: ubuntu-18.04
        container: swift:5.6.1-bionic
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Make Logs Directory
          run: mkdir logs
        - name: Swift Version
          run: swift --version
        - name: Test (Release)
          run: swift test --configuration release -Xswiftc -enable-testing --enable-test-discovery
        - name: Upload Logs
          uses: actions/upload-artifact@v1
          if: always()
          with:
            name: logs
            path: logs
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'Linux (Swift 5.6)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}

